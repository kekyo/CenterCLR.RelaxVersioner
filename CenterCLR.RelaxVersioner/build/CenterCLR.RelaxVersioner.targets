<?xml version="1.0" encoding="utf-8"?>
<!--
    CenterCLR.RelaxVersioner - Easy-usage, Git-based, auto-generate version informations toolset.
    Copyright (c) 2016-2019 Kouji Matsui (@kozy_kekyo, @kekyo2)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- ============================================================================= -->
  <!-- Properties definition -->

  <!-- ======================== -->
  <!-- Common -->
  <PropertyGroup>
    <!-- This path identicate auto-generated source code by RelaxVersioner. -->
    <RelaxVersionerOutputPath Condition="'$(RelaxVersionerOutputPath)' == ''">$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)','$(IntermediateOutputPath)','RelaxVersioner$(DefaultLanguageSourceExtension)'))</RelaxVersionerOutputPath>
    <BuildIdentifier Condition="'$(BuildIdentifier)' == ''"></BuildIdentifier>
    <RelaxVersionerBuildIdentifier Condition="'$(RelaxVersionerBuildIdentifier)' == ''">$(BuildIdentifier)</RelaxVersionerBuildIdentifier>
  </PropertyGroup>

  <!-- ======================== -->
  <!-- For F# -->
  <PropertyGroup Condition="'$(Language)' == 'F#'">
    <!-- HACK: https://github.com/fsharp/fsharp/issues/289 -->
    <NoWarn>$(NoWarn) 2003</NoWarn>
  </PropertyGroup>

  <!-- ======================== -->
  <!-- For C++ (or C++/CLI) -->
  <PropertyGroup Condition="'$(Language)' == 'C++'">
    <RelaxVersionerLanguage Condition="('$(RelaxVersionerLanguage)' == '') AND ('$(CLRSupport)' == 'true')">C++/CLI</RelaxVersionerLanguage>
    <RelaxVersionerLanguage Condition="'$(RelaxVersionerLanguage)' == ''">C++</RelaxVersionerLanguage>
    <BuildCompileTargets>
      RelaxVersionerBuild;
      $(BuildCompileTargets);
    </BuildCompileTargets>
    <GenerateNuspecDependsOn>
      RelaxVersionerBeforePack;
      $(GenerateNuspecDependsOn);
    </GenerateNuspecDependsOn>
  </PropertyGroup>

  <!-- ======================== -->
  <!-- For all languages except C++ -->
  <PropertyGroup Condition="'$(Language)' != 'C++'">
    <RelaxVersionerLanguage Condition="'$(RelaxVersionerLanguage)' == ''">$(Language)</RelaxVersionerLanguage>
    <CoreBuildDependsOn>
      RelaxVersionerBuild;
      $(CoreBuildDependsOn);
    </CoreBuildDependsOn>
    <GenerateNuspecDependsOn>
      RelaxVersionerBeforePack;
      $(GenerateNuspecDependsOn);
    </GenerateNuspecDependsOn>
  </PropertyGroup>

  <!-- ============================================================================= -->
  <!-- Build definition -->
  <Target Name="RelaxVersionerBuild" BeforeTargets="BeforeCompile" Outputs="$(RelaxVersionerOutputPath)">

    <PropertyGroup>
      <RelaxVersionerResultPath>$([System.IO.Path]::Combine('$([System.IO.Path]::GetTempPath())','$([System.Guid]::NewGuid().ToString())')</RelaxVersionerResultPath>
    </PropertyGroup>
    
    <!-- ======================== -->
    <!-- Execute RelaxVersioner -->
    
    <Exec WorkingDirectory="$(RelaxVersionerToolingDir)"
          Command="$(RelaxVersionerToolingRuntimeName)$(RelaxVersionerToolingPath) --language=$(RelaxVersionerLanguage) --buildIdentifier=$(RelaxVersionerBuildIdentifier) --outputPath=$(RelaxVersionerOutputPath) --resultPath=$(RelaxVersionerResultPath) $(MSBuildProjectFullPath)" />

    <XmlPeek XmlInputPath="$(RelaxVersionerResultPath)" Query="/Result/Version/text()">
      <Output TaskParameter="Result" PropertyName="RelaxVersionerDetectedIdentity" />
    </XmlPeek>
    <XmlPeek XmlInputPath="$(RelaxVersionerResultPath)" Query="/Result/ShortVersion/text()">
      <Output TaskParameter="Result" PropertyName="RelaxVersionerDetectedShortIdentity" />
    </XmlPeek>
    <XmlPeek XmlInputPath="$(RelaxVersionerResultPath)" Query="/Result/Message/text()">
      <Output TaskParameter="Result" PropertyName="RelaxVersionerDetectedMessage" />
    </XmlPeek>

    <Delete Files="$(RelaxVersionerResultPath)" />

    <!-- ============================================================================= -->
    <!-- Add output rule -->

    <PropertyGroup>
      <!-- Apply NuGet versioning -->
      <PackageVersion>$(RelaxVersionerDetectedShortIdentity)</PackageVersion>
      <PackageReleaseNotes>$(RelaxVersionerDetectedMessage)</PackageReleaseNotes>
    </PropertyGroup>

    <!-- ======================== -->
    <!-- For F# -->
    <ItemGroup Condition="'$(Language)' == 'F#'">
      <!-- HACK: F#'s EntryPoint expression is ignoring namespace/module if source code is last compilation.
            So, RelaxVersioner code insert before any source codes. -->
      <CompileBefore Include="$(RelaxVersionerOutputPath)" />
    </ItemGroup>

    <!-- ======================== -->
    <!-- For C++ (or C++/CLI) -->
    <ItemGroup Condition="'$(Language)' == 'C++'">
      <ClCompile Include="$(RelaxVersionerOutputPath)" />
    </ItemGroup>

    <!-- ======================== -->
    <!-- For other languages -->
    <ItemGroup Condition="('$(Language)' != 'F#') and ('$(Language)' != 'C++')">
      <Compile Include="$(RelaxVersionerOutputPath)" />
    </ItemGroup>
  </Target>

  <!-- ============================================================================= -->
  <!-- Pre publish definition -->
  <Target Name="RelaxVersionerBeforePack" BeforeTargets="GenerateNuspec">

    <PropertyGroup>
      <RelaxVersionerResultPath>$([System.IO.Path]::Combine('$([System.IO.Path]::GetTempPath())','$([System.Guid]::NewGuid().ToString())')</RelaxVersionerResultPath>
    </PropertyGroup>

    <!-- ======================== -->
    <!-- Execute RelaxVersioner in dryrun mode -->

    <Exec WorkingDirectory="$(RelaxVersionerToolingDir)"
          Command="$(RelaxVersionerToolingRuntimeName)$(RelaxVersionerToolingPath) --language=$(RelaxVersionerLanguage) --buildIdentifier=$(RelaxVersionerBuildIdentifier) --resultPath=$(RelaxVersionerResultPath) $(MSBuildProjectFullPath)" />

    <XmlPeek XmlInputPath="$(RelaxVersionerResultPath)" Query="/Result/Version/text()">
      <Output TaskParameter="Result" PropertyName="RelaxVersionerDetectedIdentity" />
    </XmlPeek>
    <XmlPeek XmlInputPath="$(RelaxVersionerResultPath)" Query="/Result/ShortVersion/text()">
      <Output TaskParameter="Result" PropertyName="RelaxVersionerDetectedShortIdentity" />
    </XmlPeek>
    <XmlPeek XmlInputPath="$(RelaxVersionerResultPath)" Query="/Result/Message/text()">
      <Output TaskParameter="Result" PropertyName="RelaxVersionerDetectedMessage" />
    </XmlPeek>

    <Delete Files="$(RelaxVersionerResultPath)" />

    <!-- ============================================================================= -->
    <!-- Add output rule -->

    <PropertyGroup>
      <!-- Apply NuGet versioning -->
      <PackageVersion>$(RelaxVersionerDetectedShortIdentity)</PackageVersion>
      <PackageReleaseNotes>$(RelaxVersionerDetectedMessage)</PackageReleaseNotes>
    </PropertyGroup>
  </Target>
</Project>
